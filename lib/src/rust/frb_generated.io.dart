// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.12.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables

import 'api/api.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  Author dco_decode_author(dynamic raw);

  @protected
  BarcodeDetectResult dco_decode_barcode_detect_result(dynamic raw);

  @protected
  BarcodeDetectResults dco_decode_barcode_detect_results(dynamic raw);

  @protected
  BookMetaData dco_decode_book_meta_data(dynamic raw);

  @protected
  BookMetaDataFromProvider dco_decode_book_meta_data_from_provider(dynamic raw);

  @protected
  BookMetaDataFromProvider dco_decode_box_autoadd_book_meta_data_from_provider(
      dynamic raw);

  @protected
  BundleMetaData dco_decode_box_autoadd_bundle_meta_data(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_32(dynamic raw);

  @protected
  ItemState dco_decode_box_autoadd_item_state(dynamic raw);

  @protected
  BundleMetaData dco_decode_bundle_meta_data(dynamic raw);

  @protected
  double dco_decode_f_32(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  ISBNMetadataPair dco_decode_isbn_metadata_pair(dynamic raw);

  @protected
  ItemState dco_decode_item_state(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<Author> dco_decode_list_author(dynamic raw);

  @protected
  List<BarcodeDetectResult> dco_decode_list_barcode_detect_result(dynamic raw);

  @protected
  List<BookMetaData> dco_decode_list_book_meta_data(dynamic raw);

  @protected
  List<ISBNMetadataPair> dco_decode_list_isbn_metadata_pair(dynamic raw);

  @protected
  List<BundleMetaData?> dco_decode_list_opt_box_autoadd_bundle_meta_data(
      dynamic raw);

  @protected
  List<Point> dco_decode_list_point(dynamic raw);

  @protected
  Float32List dco_decode_list_prim_f_32_strict(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<ProviderMetadataPair> dco_decode_list_provider_metadata_pair(
      dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  BookMetaDataFromProvider?
      dco_decode_opt_box_autoadd_book_meta_data_from_provider(dynamic raw);

  @protected
  BundleMetaData? dco_decode_opt_box_autoadd_bundle_meta_data(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_32(dynamic raw);

  @protected
  ItemState? dco_decode_opt_box_autoadd_item_state(dynamic raw);

  @protected
  List<String>? dco_decode_opt_list_String(dynamic raw);

  @protected
  List<Author>? dco_decode_opt_list_author(dynamic raw);

  @protected
  Point dco_decode_point(dynamic raw);

  @protected
  ProviderEnum dco_decode_provider_enum(dynamic raw);

  @protected
  ProviderMetadataPair dco_decode_provider_metadata_pair(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  Author sse_decode_author(SseDeserializer deserializer);

  @protected
  BarcodeDetectResult sse_decode_barcode_detect_result(
      SseDeserializer deserializer);

  @protected
  BarcodeDetectResults sse_decode_barcode_detect_results(
      SseDeserializer deserializer);

  @protected
  BookMetaData sse_decode_book_meta_data(SseDeserializer deserializer);

  @protected
  BookMetaDataFromProvider sse_decode_book_meta_data_from_provider(
      SseDeserializer deserializer);

  @protected
  BookMetaDataFromProvider sse_decode_box_autoadd_book_meta_data_from_provider(
      SseDeserializer deserializer);

  @protected
  BundleMetaData sse_decode_box_autoadd_bundle_meta_data(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_32(SseDeserializer deserializer);

  @protected
  ItemState sse_decode_box_autoadd_item_state(SseDeserializer deserializer);

  @protected
  BundleMetaData sse_decode_bundle_meta_data(SseDeserializer deserializer);

  @protected
  double sse_decode_f_32(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  ISBNMetadataPair sse_decode_isbn_metadata_pair(SseDeserializer deserializer);

  @protected
  ItemState sse_decode_item_state(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<Author> sse_decode_list_author(SseDeserializer deserializer);

  @protected
  List<BarcodeDetectResult> sse_decode_list_barcode_detect_result(
      SseDeserializer deserializer);

  @protected
  List<BookMetaData> sse_decode_list_book_meta_data(
      SseDeserializer deserializer);

  @protected
  List<ISBNMetadataPair> sse_decode_list_isbn_metadata_pair(
      SseDeserializer deserializer);

  @protected
  List<BundleMetaData?> sse_decode_list_opt_box_autoadd_bundle_meta_data(
      SseDeserializer deserializer);

  @protected
  List<Point> sse_decode_list_point(SseDeserializer deserializer);

  @protected
  Float32List sse_decode_list_prim_f_32_strict(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<ProviderMetadataPair> sse_decode_list_provider_metadata_pair(
      SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  BookMetaDataFromProvider?
      sse_decode_opt_box_autoadd_book_meta_data_from_provider(
          SseDeserializer deserializer);

  @protected
  BundleMetaData? sse_decode_opt_box_autoadd_bundle_meta_data(
      SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_32(SseDeserializer deserializer);

  @protected
  ItemState? sse_decode_opt_box_autoadd_item_state(
      SseDeserializer deserializer);

  @protected
  List<String>? sse_decode_opt_list_String(SseDeserializer deserializer);

  @protected
  List<Author>? sse_decode_opt_list_author(SseDeserializer deserializer);

  @protected
  Point sse_decode_point(SseDeserializer deserializer);

  @protected
  ProviderEnum sse_decode_provider_enum(SseDeserializer deserializer);

  @protected
  ProviderMetadataPair sse_decode_provider_metadata_pair(
      SseDeserializer deserializer);

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_AnyhowException(
      AnyhowException raw) {
    throw UnimplementedError();
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_String(String raw) {
    return cst_encode_list_prim_u_8_strict(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_cst_book_meta_data_from_provider>
      cst_encode_box_autoadd_book_meta_data_from_provider(
          BookMetaDataFromProvider raw) {
    final ptr = wire.cst_new_box_autoadd_book_meta_data_from_provider();
    cst_api_fill_to_wire_book_meta_data_from_provider(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_bundle_meta_data>
      cst_encode_box_autoadd_bundle_meta_data(BundleMetaData raw) {
    final ptr = wire.cst_new_box_autoadd_bundle_meta_data();
    cst_api_fill_to_wire_bundle_meta_data(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_i_32(int raw) {
    return wire.cst_new_box_autoadd_i_32(cst_encode_i_32(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_item_state(ItemState raw) {
    return wire.cst_new_box_autoadd_item_state(cst_encode_item_state(raw));
  }

  @protected
  ffi.Pointer<wire_cst_list_String> cst_encode_list_String(List<String> raw) {
    final ans = wire.cst_new_list_String(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_String(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_author> cst_encode_list_author(List<Author> raw) {
    final ans = wire.cst_new_list_author(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_author(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_barcode_detect_result>
      cst_encode_list_barcode_detect_result(List<BarcodeDetectResult> raw) {
    final ans = wire.cst_new_list_barcode_detect_result(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_barcode_detect_result(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_book_meta_data> cst_encode_list_book_meta_data(
      List<BookMetaData> raw) {
    final ans = wire.cst_new_list_book_meta_data(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_book_meta_data(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_isbn_metadata_pair>
      cst_encode_list_isbn_metadata_pair(List<ISBNMetadataPair> raw) {
    final ans = wire.cst_new_list_isbn_metadata_pair(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_isbn_metadata_pair(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_bundle_meta_data>
      cst_encode_list_opt_box_autoadd_bundle_meta_data(
          List<BundleMetaData?> raw) {
    final ans = wire.cst_new_list_opt_box_autoadd_bundle_meta_data(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_bundle_meta_data(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_point> cst_encode_list_point(List<Point> raw) {
    final ans = wire.cst_new_list_point(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_point(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_f_32_strict> cst_encode_list_prim_f_32_strict(
      Float32List raw) {
    final ans = wire.cst_new_list_prim_f_32_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_list_prim_u_8_strict(
      Uint8List raw) {
    final ans = wire.cst_new_list_prim_u_8_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_provider_metadata_pair>
      cst_encode_list_provider_metadata_pair(List<ProviderMetadataPair> raw) {
    final ans = wire.cst_new_list_provider_metadata_pair(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_provider_metadata_pair(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_opt_String(
      String? raw) {
    return raw == null ? ffi.nullptr : cst_encode_String(raw);
  }

  @protected
  ffi.Pointer<wire_cst_book_meta_data_from_provider>
      cst_encode_opt_box_autoadd_book_meta_data_from_provider(
          BookMetaDataFromProvider? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_book_meta_data_from_provider(raw);
  }

  @protected
  ffi.Pointer<wire_cst_bundle_meta_data>
      cst_encode_opt_box_autoadd_bundle_meta_data(BundleMetaData? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_bundle_meta_data(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_i_32(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_i_32(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_item_state(ItemState? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_item_state(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_String> cst_encode_opt_list_String(
      List<String>? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_String(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_author> cst_encode_opt_list_author(
      List<Author>? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_author(raw);
  }

  @protected
  void cst_api_fill_to_wire_author(Author apiObj, wire_cst_author wireObj) {
    wireObj.first_name = cst_encode_String(apiObj.firstName);
    wireObj.last_name = cst_encode_String(apiObj.lastName);
  }

  @protected
  void cst_api_fill_to_wire_barcode_detect_result(
      BarcodeDetectResult apiObj, wire_cst_barcode_detect_result wireObj) {
    wireObj.value = cst_encode_String(apiObj.value);
    wireObj.corners = cst_encode_list_point(apiObj.corners);
  }

  @protected
  void cst_api_fill_to_wire_barcode_detect_results(
      BarcodeDetectResults apiObj, wire_cst_barcode_detect_results wireObj) {
    wireObj.results = cst_encode_list_barcode_detect_result(apiObj.results);
  }

  @protected
  void cst_api_fill_to_wire_book_meta_data(
      BookMetaData apiObj, wire_cst_book_meta_data wireObj) {
    wireObj.isbn = cst_encode_String(apiObj.isbn);
    wireObj.title = cst_encode_opt_String(apiObj.title);
    wireObj.authors = cst_encode_opt_list_author(apiObj.authors);
    wireObj.blurb = cst_encode_opt_String(apiObj.blurb);
    wireObj.keywords = cst_encode_opt_list_String(apiObj.keywords);
    wireObj.price_cent = cst_encode_opt_box_autoadd_i_32(apiObj.priceCent);
  }

  @protected
  void cst_api_fill_to_wire_book_meta_data_from_provider(
      BookMetaDataFromProvider apiObj,
      wire_cst_book_meta_data_from_provider wireObj) {
    wireObj.title = cst_encode_opt_String(apiObj.title);
    wireObj.authors = cst_encode_list_author(apiObj.authors);
    wireObj.blurb = cst_encode_opt_String(apiObj.blurb);
    wireObj.keywords = cst_encode_list_String(apiObj.keywords);
    wireObj.market_price = cst_encode_list_prim_f_32_strict(apiObj.marketPrice);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_book_meta_data_from_provider(
      BookMetaDataFromProvider apiObj,
      ffi.Pointer<wire_cst_book_meta_data_from_provider> wireObj) {
    cst_api_fill_to_wire_book_meta_data_from_provider(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_bundle_meta_data(
      BundleMetaData apiObj, ffi.Pointer<wire_cst_bundle_meta_data> wireObj) {
    cst_api_fill_to_wire_bundle_meta_data(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_bundle_meta_data(
      BundleMetaData apiObj, wire_cst_bundle_meta_data wireObj) {
    wireObj.weight_grams = cst_encode_opt_box_autoadd_i_32(apiObj.weightGrams);
    wireObj.item_state =
        cst_encode_opt_box_autoadd_item_state(apiObj.itemState);
    wireObj.books = cst_encode_list_book_meta_data(apiObj.books);
  }

  @protected
  void cst_api_fill_to_wire_isbn_metadata_pair(
      ISBNMetadataPair apiObj, wire_cst_isbn_metadata_pair wireObj) {
    wireObj.isbn = cst_encode_String(apiObj.isbn);
    wireObj.metadatas =
        cst_encode_list_provider_metadata_pair(apiObj.metadatas);
  }

  @protected
  void cst_api_fill_to_wire_point(Point apiObj, wire_cst_point wireObj) {
    wireObj.x = cst_encode_u_16(apiObj.x);
    wireObj.y = cst_encode_u_16(apiObj.y);
  }

  @protected
  void cst_api_fill_to_wire_provider_metadata_pair(
      ProviderMetadataPair apiObj, wire_cst_provider_metadata_pair wireObj) {
    wireObj.provider = cst_encode_provider_enum(apiObj.provider);
    wireObj.metadata = cst_encode_opt_box_autoadd_book_meta_data_from_provider(
        apiObj.metadata);
  }

  @protected
  double cst_encode_f_32(double raw);

  @protected
  int cst_encode_i_32(int raw);

  @protected
  int cst_encode_item_state(ItemState raw);

  @protected
  int cst_encode_provider_enum(ProviderEnum raw);

  @protected
  int cst_encode_u_16(int raw);

  @protected
  int cst_encode_u_8(int raw);

  @protected
  void cst_encode_unit(void raw);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_author(Author self, SseSerializer serializer);

  @protected
  void sse_encode_barcode_detect_result(
      BarcodeDetectResult self, SseSerializer serializer);

  @protected
  void sse_encode_barcode_detect_results(
      BarcodeDetectResults self, SseSerializer serializer);

  @protected
  void sse_encode_book_meta_data(BookMetaData self, SseSerializer serializer);

  @protected
  void sse_encode_book_meta_data_from_provider(
      BookMetaDataFromProvider self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_book_meta_data_from_provider(
      BookMetaDataFromProvider self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_bundle_meta_data(
      BundleMetaData self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_item_state(
      ItemState self, SseSerializer serializer);

  @protected
  void sse_encode_bundle_meta_data(
      BundleMetaData self, SseSerializer serializer);

  @protected
  void sse_encode_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_isbn_metadata_pair(
      ISBNMetadataPair self, SseSerializer serializer);

  @protected
  void sse_encode_item_state(ItemState self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_author(List<Author> self, SseSerializer serializer);

  @protected
  void sse_encode_list_barcode_detect_result(
      List<BarcodeDetectResult> self, SseSerializer serializer);

  @protected
  void sse_encode_list_book_meta_data(
      List<BookMetaData> self, SseSerializer serializer);

  @protected
  void sse_encode_list_isbn_metadata_pair(
      List<ISBNMetadataPair> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_bundle_meta_data(
      List<BundleMetaData?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point(List<Point> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_f_32_strict(
      Float32List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_provider_metadata_pair(
      List<ProviderMetadataPair> self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_book_meta_data_from_provider(
      BookMetaDataFromProvider? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_bundle_meta_data(
      BundleMetaData? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_item_state(
      ItemState? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_String(List<String>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_author(List<Author>? self, SseSerializer serializer);

  @protected
  void sse_encode_point(Point self, SseSerializer serializer);

  @protected
  void sse_encode_provider_enum(ProviderEnum self, SseSerializer serializer);

  @protected
  void sse_encode_provider_metadata_pair(
      ProviderMetadataPair self, SseSerializer serializer);

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);
}

// Section: wire_class

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names
// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  RustLibWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void dart_fn_deliver_output(
    int call_id,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _dart_fn_deliver_output(
      call_id,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _dart_fn_deliver_outputPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int32, ffi.Pointer<ffi.Uint8>, ffi.Int32,
              ffi.Int32)>>('frbgen_booky_dart_fn_deliver_output');
  late final _dart_fn_deliver_output = _dart_fn_deliver_outputPtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_detect_barcode_in_image(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> img_path,
  ) {
    return _wire_detect_barcode_in_image(
      port_,
      img_path,
    );
  }

  late final _wire_detect_barcode_in_imagePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_booky_wire_detect_barcode_in_image');
  late final _wire_detect_barcode_in_image =
      _wire_detect_barcode_in_imagePtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_get_auto_metadata_from_bundle(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> path,
  ) {
    return _wire_get_auto_metadata_from_bundle(
      port_,
      path,
    );
  }

  late final _wire_get_auto_metadata_from_bundlePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_booky_wire_get_auto_metadata_from_bundle');
  late final _wire_get_auto_metadata_from_bundle =
      _wire_get_auto_metadata_from_bundlePtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_get_manual_metadata_for_bundle(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> bundle_path,
  ) {
    return _wire_get_manual_metadata_for_bundle(
      port_,
      bundle_path,
    );
  }

  late final _wire_get_manual_metadata_for_bundlePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_booky_wire_get_manual_metadata_for_bundle');
  late final _wire_get_manual_metadata_for_bundle =
      _wire_get_manual_metadata_for_bundlePtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_get_merged_metadata_for_all_bundles(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> bundles_dir,
  ) {
    return _wire_get_merged_metadata_for_all_bundles(
      port_,
      bundles_dir,
    );
  }

  late final _wire_get_merged_metadata_for_all_bundlesPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_booky_wire_get_merged_metadata_for_all_bundles');
  late final _wire_get_merged_metadata_for_all_bundles =
      _wire_get_merged_metadata_for_all_bundlesPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_get_merged_metadata_for_bundle(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> bundle_path,
  ) {
    return _wire_get_merged_metadata_for_bundle(
      port_,
      bundle_path,
    );
  }

  late final _wire_get_merged_metadata_for_bundlePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_booky_wire_get_merged_metadata_for_bundle');
  late final _wire_get_merged_metadata_for_bundle =
      _wire_get_merged_metadata_for_bundlePtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_get_metadata_from_isbns(
    int port_,
    ffi.Pointer<wire_cst_list_String> isbns,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> path,
  ) {
    return _wire_get_metadata_from_isbns(
      port_,
      isbns,
      path,
    );
  }

  late final _wire_get_metadata_from_isbnsPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_String>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_booky_wire_get_metadata_from_isbns');
  late final _wire_get_metadata_from_isbns =
      _wire_get_metadata_from_isbnsPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_String>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_get_metadata_from_provider(
    int port_,
    int provider,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> isbn,
  ) {
    return _wire_get_metadata_from_provider(
      port_,
      provider,
      isbn,
    );
  }

  late final _wire_get_metadata_from_providerPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Int32,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_booky_wire_get_metadata_from_provider');
  late final _wire_get_metadata_from_provider =
      _wire_get_metadata_from_providerPtr.asFunction<
          void Function(
              int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_set_manual_metadata_for_bundle(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> bundle_path,
    ffi.Pointer<wire_cst_bundle_meta_data> bundle_metadata,
  ) {
    return _wire_set_manual_metadata_for_bundle(
      port_,
      bundle_path,
      bundle_metadata,
    );
  }

  late final _wire_set_manual_metadata_for_bundlePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_bundle_meta_data>)>>(
      'frbgen_booky_wire_set_manual_metadata_for_bundle');
  late final _wire_set_manual_metadata_for_bundle =
      _wire_set_manual_metadata_for_bundlePtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_bundle_meta_data>)>();

  ffi.Pointer<wire_cst_book_meta_data_from_provider>
      cst_new_box_autoadd_book_meta_data_from_provider() {
    return _cst_new_box_autoadd_book_meta_data_from_provider();
  }

  late final _cst_new_box_autoadd_book_meta_data_from_providerPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_book_meta_data_from_provider> Function()>>(
      'frbgen_booky_cst_new_box_autoadd_book_meta_data_from_provider');
  late final _cst_new_box_autoadd_book_meta_data_from_provider =
      _cst_new_box_autoadd_book_meta_data_from_providerPtr.asFunction<
          ffi.Pointer<wire_cst_book_meta_data_from_provider> Function()>();

  ffi.Pointer<wire_cst_bundle_meta_data>
      cst_new_box_autoadd_bundle_meta_data() {
    return _cst_new_box_autoadd_bundle_meta_data();
  }

  late final _cst_new_box_autoadd_bundle_meta_dataPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_bundle_meta_data> Function()>>(
      'frbgen_booky_cst_new_box_autoadd_bundle_meta_data');
  late final _cst_new_box_autoadd_bundle_meta_data =
      _cst_new_box_autoadd_bundle_meta_dataPtr
          .asFunction<ffi.Pointer<wire_cst_bundle_meta_data> Function()>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_i_32(
    int value,
  ) {
    return _cst_new_box_autoadd_i_32(
      value,
    );
  }

  late final _cst_new_box_autoadd_i_32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_booky_cst_new_box_autoadd_i_32');
  late final _cst_new_box_autoadd_i_32 = _cst_new_box_autoadd_i_32Ptr
      .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_item_state(
    int value,
  ) {
    return _cst_new_box_autoadd_item_state(
      value,
    );
  }

  late final _cst_new_box_autoadd_item_statePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_booky_cst_new_box_autoadd_item_state');
  late final _cst_new_box_autoadd_item_state =
      _cst_new_box_autoadd_item_statePtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<wire_cst_list_String> cst_new_list_String(
    int len,
  ) {
    return _cst_new_list_String(
      len,
    );
  }

  late final _cst_new_list_StringPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_String> Function(
              ffi.Int32)>>('frbgen_booky_cst_new_list_String');
  late final _cst_new_list_String = _cst_new_list_StringPtr
      .asFunction<ffi.Pointer<wire_cst_list_String> Function(int)>();

  ffi.Pointer<wire_cst_list_author> cst_new_list_author(
    int len,
  ) {
    return _cst_new_list_author(
      len,
    );
  }

  late final _cst_new_list_authorPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_author> Function(
              ffi.Int32)>>('frbgen_booky_cst_new_list_author');
  late final _cst_new_list_author = _cst_new_list_authorPtr
      .asFunction<ffi.Pointer<wire_cst_list_author> Function(int)>();

  ffi.Pointer<wire_cst_list_barcode_detect_result>
      cst_new_list_barcode_detect_result(
    int len,
  ) {
    return _cst_new_list_barcode_detect_result(
      len,
    );
  }

  late final _cst_new_list_barcode_detect_resultPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_barcode_detect_result> Function(
              ffi.Int32)>>('frbgen_booky_cst_new_list_barcode_detect_result');
  late final _cst_new_list_barcode_detect_result =
      _cst_new_list_barcode_detect_resultPtr.asFunction<
          ffi.Pointer<wire_cst_list_barcode_detect_result> Function(int)>();

  ffi.Pointer<wire_cst_list_book_meta_data> cst_new_list_book_meta_data(
    int len,
  ) {
    return _cst_new_list_book_meta_data(
      len,
    );
  }

  late final _cst_new_list_book_meta_dataPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_book_meta_data> Function(
              ffi.Int32)>>('frbgen_booky_cst_new_list_book_meta_data');
  late final _cst_new_list_book_meta_data = _cst_new_list_book_meta_dataPtr
      .asFunction<ffi.Pointer<wire_cst_list_book_meta_data> Function(int)>();

  ffi.Pointer<wire_cst_list_isbn_metadata_pair> cst_new_list_isbn_metadata_pair(
    int len,
  ) {
    return _cst_new_list_isbn_metadata_pair(
      len,
    );
  }

  late final _cst_new_list_isbn_metadata_pairPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_isbn_metadata_pair> Function(
              ffi.Int32)>>('frbgen_booky_cst_new_list_isbn_metadata_pair');
  late final _cst_new_list_isbn_metadata_pair =
      _cst_new_list_isbn_metadata_pairPtr.asFunction<
          ffi.Pointer<wire_cst_list_isbn_metadata_pair> Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_bundle_meta_data>
      cst_new_list_opt_box_autoadd_bundle_meta_data(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_bundle_meta_data(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_bundle_meta_dataPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_bundle_meta_data>
                  Function(ffi.Int32)>>(
      'frbgen_booky_cst_new_list_opt_box_autoadd_bundle_meta_data');
  late final _cst_new_list_opt_box_autoadd_bundle_meta_data =
      _cst_new_list_opt_box_autoadd_bundle_meta_dataPtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_bundle_meta_data> Function(
              int)>();

  ffi.Pointer<wire_cst_list_point> cst_new_list_point(
    int len,
  ) {
    return _cst_new_list_point(
      len,
    );
  }

  late final _cst_new_list_pointPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_point> Function(
              ffi.Int32)>>('frbgen_booky_cst_new_list_point');
  late final _cst_new_list_point = _cst_new_list_pointPtr
      .asFunction<ffi.Pointer<wire_cst_list_point> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_f_32_strict> cst_new_list_prim_f_32_strict(
    int len,
  ) {
    return _cst_new_list_prim_f_32_strict(
      len,
    );
  }

  late final _cst_new_list_prim_f_32_strictPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_prim_f_32_strict> Function(
              ffi.Int32)>>('frbgen_booky_cst_new_list_prim_f_32_strict');
  late final _cst_new_list_prim_f_32_strict = _cst_new_list_prim_f_32_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_f_32_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_new_list_prim_u_8_strict(
    int len,
  ) {
    return _cst_new_list_prim_u_8_strict(
      len,
    );
  }

  late final _cst_new_list_prim_u_8_strictPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_prim_u_8_strict> Function(
              ffi.Int32)>>('frbgen_booky_cst_new_list_prim_u_8_strict');
  late final _cst_new_list_prim_u_8_strict = _cst_new_list_prim_u_8_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_8_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_provider_metadata_pair>
      cst_new_list_provider_metadata_pair(
    int len,
  ) {
    return _cst_new_list_provider_metadata_pair(
      len,
    );
  }

  late final _cst_new_list_provider_metadata_pairPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_provider_metadata_pair> Function(
              ffi.Int32)>>('frbgen_booky_cst_new_list_provider_metadata_pair');
  late final _cst_new_list_provider_metadata_pair =
      _cst_new_list_provider_metadata_pairPtr.asFunction<
          ffi.Pointer<wire_cst_list_provider_metadata_pair> Function(int)>();

  int dummy_method_to_enforce_bundling() {
    return _dummy_method_to_enforce_bundling();
  }

  late final _dummy_method_to_enforce_bundlingPtr =
      _lookup<ffi.NativeFunction<ffi.Int64 Function()>>(
          'dummy_method_to_enforce_bundling');
  late final _dummy_method_to_enforce_bundling =
      _dummy_method_to_enforce_bundlingPtr.asFunction<int Function()>();
}

final class wire_cst_list_prim_u_8_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_String extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_list_prim_u_8_strict>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_author extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> first_name;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> last_name;
}

final class wire_cst_list_author extends ffi.Struct {
  external ffi.Pointer<wire_cst_author> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_book_meta_data extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> isbn;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> title;

  external ffi.Pointer<wire_cst_list_author> authors;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> blurb;

  external ffi.Pointer<wire_cst_list_String> keywords;

  external ffi.Pointer<ffi.Int32> price_cent;
}

final class wire_cst_list_book_meta_data extends ffi.Struct {
  external ffi.Pointer<wire_cst_book_meta_data> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_bundle_meta_data extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> weight_grams;

  external ffi.Pointer<ffi.Int32> item_state;

  external ffi.Pointer<wire_cst_list_book_meta_data> books;
}

final class wire_cst_list_prim_f_32_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Float> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_book_meta_data_from_provider extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> title;

  external ffi.Pointer<wire_cst_list_author> authors;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> blurb;

  external ffi.Pointer<wire_cst_list_String> keywords;

  external ffi.Pointer<wire_cst_list_prim_f_32_strict> market_price;
}

final class wire_cst_point extends ffi.Struct {
  @ffi.Uint16()
  external int x;

  @ffi.Uint16()
  external int y;
}

final class wire_cst_list_point extends ffi.Struct {
  external ffi.Pointer<wire_cst_point> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_barcode_detect_result extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> value;

  external ffi.Pointer<wire_cst_list_point> corners;
}

final class wire_cst_list_barcode_detect_result extends ffi.Struct {
  external ffi.Pointer<wire_cst_barcode_detect_result> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_provider_metadata_pair extends ffi.Struct {
  @ffi.Int32()
  external int provider;

  external ffi.Pointer<wire_cst_book_meta_data_from_provider> metadata;
}

final class wire_cst_list_provider_metadata_pair extends ffi.Struct {
  external ffi.Pointer<wire_cst_provider_metadata_pair> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_isbn_metadata_pair extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> isbn;

  external ffi.Pointer<wire_cst_list_provider_metadata_pair> metadatas;
}

final class wire_cst_list_isbn_metadata_pair extends ffi.Struct {
  external ffi.Pointer<wire_cst_isbn_metadata_pair> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_opt_box_autoadd_bundle_meta_data extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_bundle_meta_data>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_barcode_detect_results extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_barcode_detect_result> results;
}
