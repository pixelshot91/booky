// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.12.

// Section: imports

use super::*;
use flutter_rust_bridge::for_generated::byteorder::{NativeEndian, ReadBytesExt, WriteBytesExt};
use flutter_rust_bridge::for_generated::transform_result_dco;
use flutter_rust_bridge::{Handler, IntoIntoDart};

// Section: dart2rust

impl CstDecode<anyhow::Error> for *mut wire_cst_list_prim_u_8_strict {
    fn cst_decode(self) -> anyhow::Error {
        unimplemented!()
    }
}
impl CstDecode<String> for *mut wire_cst_list_prim_u_8_strict {
    fn cst_decode(self) -> String {
        let vec: Vec<u8> = self.cst_decode();
        String::from_utf8(vec).unwrap()
    }
}
impl CstDecode<crate::api::api::Author> for wire_cst_author {
    fn cst_decode(self) -> crate::api::api::Author {
        crate::api::api::Author {
            first_name: self.first_name.cst_decode(),
            last_name: self.last_name.cst_decode(),
        }
    }
}
impl CstDecode<crate::api::api::BarcodeDetectResult> for wire_cst_barcode_detect_result {
    fn cst_decode(self) -> crate::api::api::BarcodeDetectResult {
        crate::api::api::BarcodeDetectResult {
            value: self.value.cst_decode(),
            corners: self.corners.cst_decode(),
        }
    }
}
impl CstDecode<crate::api::api::BarcodeDetectResults> for wire_cst_barcode_detect_results {
    fn cst_decode(self) -> crate::api::api::BarcodeDetectResults {
        crate::api::api::BarcodeDetectResults {
            results: self.results.cst_decode(),
        }
    }
}
impl CstDecode<crate::api::api::BookMetaData> for wire_cst_book_meta_data {
    fn cst_decode(self) -> crate::api::api::BookMetaData {
        crate::api::api::BookMetaData {
            isbn: self.isbn.cst_decode(),
            title: self.title.cst_decode(),
            authors: self.authors.cst_decode(),
            blurb: self.blurb.cst_decode(),
            keywords: self.keywords.cst_decode(),
            price_cent: self.price_cent.cst_decode(),
        }
    }
}
impl CstDecode<crate::api::api::BookMetaDataFromProvider>
    for wire_cst_book_meta_data_from_provider
{
    fn cst_decode(self) -> crate::api::api::BookMetaDataFromProvider {
        crate::api::api::BookMetaDataFromProvider {
            title: self.title.cst_decode(),
            authors: self.authors.cst_decode(),
            blurb: self.blurb.cst_decode(),
            keywords: self.keywords.cst_decode(),
            market_price: self.market_price.cst_decode(),
        }
    }
}
impl CstDecode<crate::api::api::BookMetaDataFromProvider>
    for *mut wire_cst_book_meta_data_from_provider
{
    fn cst_decode(self) -> crate::api::api::BookMetaDataFromProvider {
        let wrap = unsafe { flutter_rust_bridge::for_generated::box_from_leak_ptr(self) };
        CstDecode::<crate::api::api::BookMetaDataFromProvider>::cst_decode(*wrap).into()
    }
}
impl CstDecode<crate::api::api::BundleMetaData> for *mut wire_cst_bundle_meta_data {
    fn cst_decode(self) -> crate::api::api::BundleMetaData {
        let wrap = unsafe { flutter_rust_bridge::for_generated::box_from_leak_ptr(self) };
        CstDecode::<crate::api::api::BundleMetaData>::cst_decode(*wrap).into()
    }
}
impl CstDecode<i32> for *mut i32 {
    fn cst_decode(self) -> i32 {
        unsafe { *flutter_rust_bridge::for_generated::box_from_leak_ptr(self) }
    }
}
impl CstDecode<crate::api::api::ItemState> for *mut i32 {
    fn cst_decode(self) -> crate::api::api::ItemState {
        let wrap = unsafe { flutter_rust_bridge::for_generated::box_from_leak_ptr(self) };
        CstDecode::<crate::api::api::ItemState>::cst_decode(*wrap).into()
    }
}
impl CstDecode<crate::api::api::BundleMetaData> for wire_cst_bundle_meta_data {
    fn cst_decode(self) -> crate::api::api::BundleMetaData {
        crate::api::api::BundleMetaData {
            weight_grams: self.weight_grams.cst_decode(),
            item_state: self.item_state.cst_decode(),
            books: self.books.cst_decode(),
        }
    }
}
impl CstDecode<crate::api::api::ISBNMetadataPair> for wire_cst_isbn_metadata_pair {
    fn cst_decode(self) -> crate::api::api::ISBNMetadataPair {
        crate::api::api::ISBNMetadataPair {
            isbn: self.isbn.cst_decode(),
            metadatas: self.metadatas.cst_decode(),
        }
    }
}
impl CstDecode<Vec<String>> for *mut wire_cst_list_String {
    fn cst_decode(self) -> Vec<String> {
        let vec = unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        };
        vec.into_iter().map(CstDecode::cst_decode).collect()
    }
}
impl CstDecode<Vec<crate::api::api::Author>> for *mut wire_cst_list_author {
    fn cst_decode(self) -> Vec<crate::api::api::Author> {
        let vec = unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        };
        vec.into_iter().map(CstDecode::cst_decode).collect()
    }
}
impl CstDecode<Vec<crate::api::api::BarcodeDetectResult>>
    for *mut wire_cst_list_barcode_detect_result
{
    fn cst_decode(self) -> Vec<crate::api::api::BarcodeDetectResult> {
        let vec = unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        };
        vec.into_iter().map(CstDecode::cst_decode).collect()
    }
}
impl CstDecode<Vec<crate::api::api::BookMetaData>> for *mut wire_cst_list_book_meta_data {
    fn cst_decode(self) -> Vec<crate::api::api::BookMetaData> {
        let vec = unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        };
        vec.into_iter().map(CstDecode::cst_decode).collect()
    }
}
impl CstDecode<Vec<crate::api::api::ISBNMetadataPair>> for *mut wire_cst_list_isbn_metadata_pair {
    fn cst_decode(self) -> Vec<crate::api::api::ISBNMetadataPair> {
        let vec = unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        };
        vec.into_iter().map(CstDecode::cst_decode).collect()
    }
}
impl CstDecode<Vec<Option<crate::api::api::BundleMetaData>>>
    for *mut wire_cst_list_opt_box_autoadd_bundle_meta_data
{
    fn cst_decode(self) -> Vec<Option<crate::api::api::BundleMetaData>> {
        let vec = unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        };
        vec.into_iter().map(CstDecode::cst_decode).collect()
    }
}
impl CstDecode<Vec<crate::api::api::Point>> for *mut wire_cst_list_point {
    fn cst_decode(self) -> Vec<crate::api::api::Point> {
        let vec = unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        };
        vec.into_iter().map(CstDecode::cst_decode).collect()
    }
}
impl CstDecode<Vec<f32>> for *mut wire_cst_list_prim_f_32_strict {
    fn cst_decode(self) -> Vec<f32> {
        unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        }
    }
}
impl CstDecode<Vec<u8>> for *mut wire_cst_list_prim_u_8_strict {
    fn cst_decode(self) -> Vec<u8> {
        unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        }
    }
}
impl CstDecode<Vec<crate::api::api::ProviderMetadataPair>>
    for *mut wire_cst_list_provider_metadata_pair
{
    fn cst_decode(self) -> Vec<crate::api::api::ProviderMetadataPair> {
        let vec = unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        };
        vec.into_iter().map(CstDecode::cst_decode).collect()
    }
}
impl CstDecode<crate::api::api::Point> for wire_cst_point {
    fn cst_decode(self) -> crate::api::api::Point {
        crate::api::api::Point {
            x: self.x.cst_decode(),
            y: self.y.cst_decode(),
        }
    }
}
impl CstDecode<crate::api::api::ProviderMetadataPair> for wire_cst_provider_metadata_pair {
    fn cst_decode(self) -> crate::api::api::ProviderMetadataPair {
        crate::api::api::ProviderMetadataPair {
            provider: self.provider.cst_decode(),
            metadata: self.metadata.cst_decode(),
        }
    }
}
pub trait NewWithNullPtr {
    fn new_with_null_ptr() -> Self;
}

impl<T> NewWithNullPtr for *mut T {
    fn new_with_null_ptr() -> Self {
        std::ptr::null_mut()
    }
}
impl NewWithNullPtr for wire_cst_author {
    fn new_with_null_ptr() -> Self {
        Self {
            first_name: core::ptr::null_mut(),
            last_name: core::ptr::null_mut(),
        }
    }
}
impl Default for wire_cst_author {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_barcode_detect_result {
    fn new_with_null_ptr() -> Self {
        Self {
            value: core::ptr::null_mut(),
            corners: core::ptr::null_mut(),
        }
    }
}
impl Default for wire_cst_barcode_detect_result {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_barcode_detect_results {
    fn new_with_null_ptr() -> Self {
        Self {
            results: core::ptr::null_mut(),
        }
    }
}
impl Default for wire_cst_barcode_detect_results {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_book_meta_data {
    fn new_with_null_ptr() -> Self {
        Self {
            isbn: core::ptr::null_mut(),
            title: core::ptr::null_mut(),
            authors: core::ptr::null_mut(),
            blurb: core::ptr::null_mut(),
            keywords: core::ptr::null_mut(),
            price_cent: core::ptr::null_mut(),
        }
    }
}
impl Default for wire_cst_book_meta_data {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_book_meta_data_from_provider {
    fn new_with_null_ptr() -> Self {
        Self {
            title: core::ptr::null_mut(),
            authors: core::ptr::null_mut(),
            blurb: core::ptr::null_mut(),
            keywords: core::ptr::null_mut(),
            market_price: core::ptr::null_mut(),
        }
    }
}
impl Default for wire_cst_book_meta_data_from_provider {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_bundle_meta_data {
    fn new_with_null_ptr() -> Self {
        Self {
            weight_grams: core::ptr::null_mut(),
            item_state: core::ptr::null_mut(),
            books: core::ptr::null_mut(),
        }
    }
}
impl Default for wire_cst_bundle_meta_data {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_isbn_metadata_pair {
    fn new_with_null_ptr() -> Self {
        Self {
            isbn: core::ptr::null_mut(),
            metadatas: core::ptr::null_mut(),
        }
    }
}
impl Default for wire_cst_isbn_metadata_pair {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_point {
    fn new_with_null_ptr() -> Self {
        Self {
            x: Default::default(),
            y: Default::default(),
        }
    }
}
impl Default for wire_cst_point {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_provider_metadata_pair {
    fn new_with_null_ptr() -> Self {
        Self {
            provider: Default::default(),
            metadata: core::ptr::null_mut(),
        }
    }
}
impl Default for wire_cst_provider_metadata_pair {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}

#[no_mangle]
pub extern "C" fn frbgen_booky_dart_fn_deliver_output(
    call_id: i32,
    ptr_: *mut u8,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    let message = unsafe {
        flutter_rust_bridge::for_generated::Dart2RustMessageSse::from_wire(
            ptr_,
            rust_vec_len_,
            data_len_,
        )
    };
    FLUTTER_RUST_BRIDGE_HANDLER.dart_fn_handle_output(call_id, message)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_wire_detect_barcode_in_image(
    port_: i64,
    img_path: *mut wire_cst_list_prim_u_8_strict,
) {
    wire_detect_barcode_in_image_impl(port_, img_path)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_wire_get_auto_metadata_from_bundle(
    port_: i64,
    path: *mut wire_cst_list_prim_u_8_strict,
) {
    wire_get_auto_metadata_from_bundle_impl(port_, path)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_wire_get_manual_metadata_for_bundle(
    port_: i64,
    bundle_path: *mut wire_cst_list_prim_u_8_strict,
) {
    wire_get_manual_metadata_for_bundle_impl(port_, bundle_path)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_wire_get_merged_metadata_for_all_bundles(
    port_: i64,
    bundles_dir: *mut wire_cst_list_prim_u_8_strict,
) {
    wire_get_merged_metadata_for_all_bundles_impl(port_, bundles_dir)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_wire_get_merged_metadata_for_bundle(
    port_: i64,
    bundle_path: *mut wire_cst_list_prim_u_8_strict,
) {
    wire_get_merged_metadata_for_bundle_impl(port_, bundle_path)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_wire_get_metadata_from_isbns(
    port_: i64,
    isbns: *mut wire_cst_list_String,
    path: *mut wire_cst_list_prim_u_8_strict,
) {
    wire_get_metadata_from_isbns_impl(port_, isbns, path)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_wire_get_metadata_from_provider(
    port_: i64,
    provider: i32,
    isbn: *mut wire_cst_list_prim_u_8_strict,
) {
    wire_get_metadata_from_provider_impl(port_, provider, isbn)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_wire_set_manual_metadata_for_bundle(
    port_: i64,
    bundle_path: *mut wire_cst_list_prim_u_8_strict,
    bundle_metadata: *mut wire_cst_bundle_meta_data,
) {
    wire_set_manual_metadata_for_bundle_impl(port_, bundle_path, bundle_metadata)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_cst_new_box_autoadd_book_meta_data_from_provider(
) -> *mut wire_cst_book_meta_data_from_provider {
    flutter_rust_bridge::for_generated::new_leak_box_ptr(
        wire_cst_book_meta_data_from_provider::new_with_null_ptr(),
    )
}

#[no_mangle]
pub extern "C" fn frbgen_booky_cst_new_box_autoadd_bundle_meta_data(
) -> *mut wire_cst_bundle_meta_data {
    flutter_rust_bridge::for_generated::new_leak_box_ptr(
        wire_cst_bundle_meta_data::new_with_null_ptr(),
    )
}

#[no_mangle]
pub extern "C" fn frbgen_booky_cst_new_box_autoadd_i_32(value: i32) -> *mut i32 {
    flutter_rust_bridge::for_generated::new_leak_box_ptr(value)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_cst_new_box_autoadd_item_state(value: i32) -> *mut i32 {
    flutter_rust_bridge::for_generated::new_leak_box_ptr(value)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_cst_new_list_String(len: i32) -> *mut wire_cst_list_String {
    let wrap = wire_cst_list_String {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(
            <*mut wire_cst_list_prim_u_8_strict>::new_with_null_ptr(),
            len,
        ),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_cst_new_list_author(len: i32) -> *mut wire_cst_list_author {
    let wrap = wire_cst_list_author {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(
            <wire_cst_author>::new_with_null_ptr(),
            len,
        ),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_cst_new_list_barcode_detect_result(
    len: i32,
) -> *mut wire_cst_list_barcode_detect_result {
    let wrap = wire_cst_list_barcode_detect_result {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(
            <wire_cst_barcode_detect_result>::new_with_null_ptr(),
            len,
        ),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_cst_new_list_book_meta_data(
    len: i32,
) -> *mut wire_cst_list_book_meta_data {
    let wrap = wire_cst_list_book_meta_data {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(
            <wire_cst_book_meta_data>::new_with_null_ptr(),
            len,
        ),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_cst_new_list_isbn_metadata_pair(
    len: i32,
) -> *mut wire_cst_list_isbn_metadata_pair {
    let wrap = wire_cst_list_isbn_metadata_pair {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(
            <wire_cst_isbn_metadata_pair>::new_with_null_ptr(),
            len,
        ),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_cst_new_list_opt_box_autoadd_bundle_meta_data(
    len: i32,
) -> *mut wire_cst_list_opt_box_autoadd_bundle_meta_data {
    let wrap = wire_cst_list_opt_box_autoadd_bundle_meta_data {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(core::ptr::null_mut(), len),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_cst_new_list_point(len: i32) -> *mut wire_cst_list_point {
    let wrap = wire_cst_list_point {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(
            <wire_cst_point>::new_with_null_ptr(),
            len,
        ),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_cst_new_list_prim_f_32_strict(
    len: i32,
) -> *mut wire_cst_list_prim_f_32_strict {
    let ans = wire_cst_list_prim_f_32_strict {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(Default::default(), len),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(ans)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_cst_new_list_prim_u_8_strict(
    len: i32,
) -> *mut wire_cst_list_prim_u_8_strict {
    let ans = wire_cst_list_prim_u_8_strict {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(Default::default(), len),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(ans)
}

#[no_mangle]
pub extern "C" fn frbgen_booky_cst_new_list_provider_metadata_pair(
    len: i32,
) -> *mut wire_cst_list_provider_metadata_pair {
    let wrap = wire_cst_list_provider_metadata_pair {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(
            <wire_cst_provider_metadata_pair>::new_with_null_ptr(),
            len,
        ),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_author {
    first_name: *mut wire_cst_list_prim_u_8_strict,
    last_name: *mut wire_cst_list_prim_u_8_strict,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_barcode_detect_result {
    value: *mut wire_cst_list_prim_u_8_strict,
    corners: *mut wire_cst_list_point,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_barcode_detect_results {
    results: *mut wire_cst_list_barcode_detect_result,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_book_meta_data {
    isbn: *mut wire_cst_list_prim_u_8_strict,
    title: *mut wire_cst_list_prim_u_8_strict,
    authors: *mut wire_cst_list_author,
    blurb: *mut wire_cst_list_prim_u_8_strict,
    keywords: *mut wire_cst_list_String,
    price_cent: *mut i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_book_meta_data_from_provider {
    title: *mut wire_cst_list_prim_u_8_strict,
    authors: *mut wire_cst_list_author,
    blurb: *mut wire_cst_list_prim_u_8_strict,
    keywords: *mut wire_cst_list_String,
    market_price: *mut wire_cst_list_prim_f_32_strict,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_bundle_meta_data {
    weight_grams: *mut i32,
    item_state: *mut i32,
    books: *mut wire_cst_list_book_meta_data,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_isbn_metadata_pair {
    isbn: *mut wire_cst_list_prim_u_8_strict,
    metadatas: *mut wire_cst_list_provider_metadata_pair,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_String {
    ptr: *mut *mut wire_cst_list_prim_u_8_strict,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_author {
    ptr: *mut wire_cst_author,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_barcode_detect_result {
    ptr: *mut wire_cst_barcode_detect_result,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_book_meta_data {
    ptr: *mut wire_cst_book_meta_data,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_isbn_metadata_pair {
    ptr: *mut wire_cst_isbn_metadata_pair,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_opt_box_autoadd_bundle_meta_data {
    ptr: *mut *mut wire_cst_bundle_meta_data,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_point {
    ptr: *mut wire_cst_point,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_prim_f_32_strict {
    ptr: *mut f32,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_prim_u_8_strict {
    ptr: *mut u8,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_provider_metadata_pair {
    ptr: *mut wire_cst_provider_metadata_pair,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_point {
    x: u16,
    y: u16,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_provider_metadata_pair {
    provider: i32,
    metadata: *mut wire_cst_book_meta_data_from_provider,
}
